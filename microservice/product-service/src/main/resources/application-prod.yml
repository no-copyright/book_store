server:
  port: ${SERVER_PORT:8082}
  servlet:
    context-path: /product

spring:
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://postgres_db:5432/product_db_prod}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:postgres}
  jpa:
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDLAUTO:update}
    show-sql: ${SPRING_JPA_SHOWSQL:false}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 5MB

  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:kafka:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: product-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"

app:
  file-service:
    url: ${APP_FILE_SERVICE_URL:http://file-service:8087}
  file:
    download-prefix: ${APP_FILE_DOWNLOAD_PREFIX:http://api-gateway:8888/api/v1/file/media/download/}
